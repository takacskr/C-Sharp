@page "/weather"

<PageTitle>Drag and Drop</PageTitle>

<h1>Drag and Drop List</h1>

<ul @onmousedown="StartDrag" @onmouseup="EndDrag" @onmousemove="Drag">
    @foreach (var item in items)
    {
        <li draggable="true" @ondragstart="e => StartDragItem(e, item)" @ondragover="e => DragOverItem(e, item)" @ondrop="e => DropItem(e, item)">
            @item.Name
        </li>
    }
</ul>

<button @onclick="AddItem" type="button" class="btn btn-primary">Add Item</button>

@code {

    public class DragItem
    {
        public string Name { get; set; }
    }

    IList<DragItem> items = new List<DragItem>();
    DragItem draggedItem;
    bool isDragging = false;

    void AddItem()
    {
        items.Add(new DragItem { Name = $"Item {items.Count + 1}" });
    }

    void StartDragItem(DragEventArgs e, DragItem item)
    {
        draggedItem = item;
        isDragging = true;
    }

    void DragOverItem(DragEventArgs e, DragItem item)
    {
        if (isDragging && item != draggedItem)
        {
            int indexOfDraggedItem = items.IndexOf(draggedItem);
            int indexOfItem = items.IndexOf(item);
            items.RemoveAt(indexOfDraggedItem);
            if (indexOfDraggedItem < indexOfItem)
            {
                items.Insert(indexOfItem - 1, draggedItem);
            }
            else
            {
                items.Insert(indexOfItem, draggedItem);
            }
        }
    }

    void DropItem(DragEventArgs e, DragItem item)
    {
        isDragging = false;
    }

    void StartDrag(MouseEventArgs e)
    {
        isDragging = true;
    }

    void EndDrag(MouseEventArgs e)
    {
        isDragging = false;
    }

    void Drag(MouseEventArgs e)
    {
        if (isDragging)
        {
            // You can add some visual effects here, like changing the cursor or highlighting the drop area
        }
    }
}